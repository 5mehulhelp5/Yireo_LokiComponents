<?php
declare(strict_types=1);

use Magento\Framework\View\Element\Template;
use Yireo\LokiComponents\Factory\ViewModelFactory;
use Yireo\LokiComponents\Util\ComponentUtil;

/** @var Template $block */
/** @var ViewModelFactory $viewModelFactory */

$componentUtil = $viewModelFactory->create(ComponentUtil::class);
?>
<script>
    const LokiComponentFormKey = '<?= $componentUtil->getFormKey() ?>';

    const LokiComponentType = {
        id: '',
        name: '',
        elementId: '',
        blockId: '',
        targets: [],
        messages: [],
        value: null,
        initActions: {
            loadInitialData: function () {
                const jsonData = JSON.parse(this.$el.getAttribute('x-init-data'));
                for ([key, value] of Object.entries(jsonData)) {
                    this[key] = value;
                }
            }
        },
        beforeInit() {
        },
        async init() {
            this.beforeInit();

            for ([key, callback] of Object.entries(this.initActions)) {
                await callback.apply(this);
            }

            this.afterInit();
        },
        afterInit() {
        },
        async post(data) {
            if (data instanceof Event) {
                data = null;
            }

            if (!data) {
                data = this.value;
            }

            this.targets.forEach(target => {
                const targetElement = document.getElementById(target);
                if (targetElement) {
                    targetElement.setAttribute('aria-busy', true);
                } else {
                    console.log('Target element "' + target + '" does not exist');
                }
            });

            document.addEventListener("focus", (event) => {
                window.lastFocusElement = event.target;
            });

            await fetch('<?= $componentUtil->getPostUrl() ?>?form_key=' + LokiComponentFormKey + '&isAjax=true', {
                method: 'POST',
                mode: 'same-origin',
                headers: {
                    'X-Alpine-Request': true,
                    'X-Requested-With': 'XMLHttpRequest',
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    targets: this.targets,
                    componentData: data,
                    block: this.blockId,
                    handles: <?= json_encode($componentUtil->getHandles($block)) ?>,
                })
            })
                .then(response => {
                    return response.text()
                })
                .then(html => {
                    const parser = new DOMParser();
                    const ajaxDocument = parser.parseFromString(html, "text/html");
                    this.targets.forEach(target => {
                        const targetElement = document.getElementById(target);
                        const newTargetElement = ajaxDocument.getElementById(target);
                        if (targetElement && newTargetElement) {
                            targetElement.outerHTML = newTargetElement.outerHTML;
                        }

                        window.lastFocusElement.focus();
                    });
                })
                .catch(error => {
                    console.log(error)
                })
                .finally(() => {
                    this.targets.forEach(target => {
                        const targetElement = document.getElementById(target);
                        if (targetElement) {
                            targetElement.removeAttribute('aria-busy', true);
                        }
                    });
                })
        }
    }
</script>
